{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\00004431\\\\Desktop\\\\ReactUdemy\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchProductsHandler();\n  }, []);\n  async function fetchProductsHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      if (!response.ok) {\n        throw new Error('Something went wrong!!');\n      }\n      const data = await response.json();\n      const trasformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_dates\n        };\n      });\n      setMovies(trasformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found No Movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchProductsHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P/9PUaQ9igxspSrmEDm4+qSHr8M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchProductsHandler","response","fetch","ok","Error","data","json","trasformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_dates","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/00004431/Desktop/ReactUdemy/01-starting-project/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useState,useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n  const [isLoading,setIsLoading] = useState(false)\n  const [error,setError] = useState(null)\n\nuseEffect(()=>{\n  fetchProductsHandler()\n},[])\n\n  async function fetchProductsHandler() {\n    setIsLoading(true)\n    setError(null)\n    try{\n      const response = await fetch('https://swapi.dev/api/films/');\n      if (!response.ok){\n        throw new Error('Something went wrong!!')\n       }\n      const data = await response.json()\n\n      const trasformedMovies = data.results.map((movieData)=>{\n        return{\n          id:movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_dates\n        }\n      })\n      setMovies(trasformedMovies)\n    }\n    catch (error){\n      setError(error.message)\n    }\n    setIsLoading(false)\n  }\n\n  let content = <p>Found No Movies.</p>\n  if(movies.length>0){\n    content = <MoviesList movies={movies} />\n  }\n  if(error){\n    content = <p>{error}</p>\n  }\n  if(isLoading){\n    content = <p>Loading...</p>\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchProductsHandler}>Fetch Movies</button>\n      </section>\n      <section>\n       {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}